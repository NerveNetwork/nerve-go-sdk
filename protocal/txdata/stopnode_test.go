// @Title
// @Description
// @Author  Niels  2020/9/27
package txdata

import (
	"encoding/hex"
	"fmt"
	"github.com/niels1286/nerve-go-sdk/utils/seria"
	"strings"
	"testing"
)

func TestStopNode_Parse(t *testing.T) {

	type args struct {
		reader *seria.ByteBufReader
	}
	tests := [100]struct {
		name    string
		args    args
		want    string
		wantErr bool
	}{}
	str := "17010001ebc336b77de7f12639bbaa8103190faf2befc58bc4d871764ea258130e7a28a22d20ab0166352a4c75c9c51a0aa37473f7d0f91f,170200012d32038e83b7bee6754b1afa45d20c5d85ded6f9127f5fc4d8edde2be9d28e0dac92c40735f1f55527c2106cbaaf9404dbe289e3,17050001788aa1235657d02aec1de114f2c0e51911d25217df7418f084781babebfcdfefcb97aedeabad638962419bae42630c4c150a6f52,170900019b2060f515fe7ce301f7b8b76a39a45be6ffd435e8f8d6bc53e4acbbf196042e3079f028aa81795100cad8c3fa575cda6887d8ec,170100018ed5c9b6772ad4da7b9bde6203075435a0713c29453f54b70b7685a57212945f5d78adfbcee13bda906b120ca48e73ec3e0c586c,17020001417569acc430d7db60c3e173033efa350deea2939434b7ae4b9146038c40218b4d13efa89589711acecd1069568e104c6cc3edab,17050001d39dec6b9d2d056580898b7142f55b739a75a031772df689c4bc9c2e9b737497851c8357387c99e2f2ea6cd1926c6528cc4497b8,170900019c6d09f79c99e54190bc15f3185a4fbf3f0965691e694ce8bbbb0374575fee2fc537cfbe83779f6c7c95c5b7aaec89b2715b80d2,17010001b695d2dacf8772cf9f65c25febc9992d72136fc9d07356eb813be463050e205ad8be04f8205b5191b570be874d5cd7086e18e5e1,1702000121e034f432115ad81179a20460204e5d309fd444c63b069b276d55a21cc9f314ac36e1a07f2ad87b4d858c42d7335bfb0c49fb64,17050001a727d1f93800a6988048a039497843dc9fd838195fc8984c4a5a318c45a977ff6a8a7901b8b289a5c566abf0f2e144df0761be5c,17090001578a519f6e80387977df6502a49acc8537596a4166819e3cbb22347f7b8d6c6ce3396aa6480241286c2e37fff1459ae07e87a36e,170100011f55cf96d56427a0333d8f6d69154dc12ada9aac54f9053d1e44ed121791d39b1bd848299db096ad35614794ed82179f98510266,17020001767a61495e4428b333330f7c08be73ef87b216b18f5d9955dc9ee6333716453ebe699d162f453abebbfaa570cb309edb1d3d557f,17050001244af8f260469f622f688ae39eaefd22adc4d703607b99481da18974ab6f1b77330539bba98d73758a3897c77759fa9262a4bbe1,1709000163072cc9b8852b49ec1be16bd213355fb6d649d5d82ef7bdaebca0dc8de41622cc729ee2f5f2cbec088d5cc46505c12d47e1d68b,170100012cac13e5e877dca06f5f5cfd246d562428dd59deaed75456e47d492b9de01f4f59ea3508eabe771c04cd7abbb8eaa20c570389de,1702000113d3554473e45a582bafb39ddce9fdcb1c0b6c0ed4527a3adb4dfc3804976629c97a5ba8aae19aa9b998dbd35f18c634ca93d38e,17050001c6418345957a63960ca252e1358250df7a11b62136059678b92879be78557cf186aeaf51f1da64e79ad8fac27c0d6895b1fccf00,17090001df1a233c6c1bc1079df454a640e1ae39e9e32531e164a3ffe4d94a6a678cbf29f98d3a2a74f67821b5119b696ac1721148ba0ad1,1701000168361a3a1f4aab1aee34f22bdd172e71e0659ab14d2e6069695a76459a4f21446d8882ae51e974e8f3e1bd1021def7b147a9c200,170200018c4e9af9e94c9c77327ab43bbd502dd673b5021752ed2bd3e3df8277e24bcb59d62e441fc133ee52bb42753f1fe6f56af0b85c39,170500010ad05f0b76c5d381f32fd3e136007db40965f0bf1d552663e5429aa42e46f0d7053952382a06fe7e7c38d4383c23047fa3a7654e,170900019257ee0edcd6f232c9008be40f6749246a5df20856745abf8400714742f5ed474acaefef950acf0dde0992a9b500d58689e2bad5,170100016030c436d7117e334d7fd8e3aac1bae842aa55667fb99b7a56fcdf682cab637cfc6dd0980aa2eed8365269b8c8a113f368df877d,1702000120bc6d02f867796154b112e250541f7fe6810b8ca55445e343991b6a52829c46e17b2cfcf2cdeb8fe565730b1b48aca0a4b02f7e,170500015e4bcd806367c844afd00f31b19952dc1e92e68811d613b106a1654c8d7e40a928378e9ce052d5d5b2df740943448a5f2b4098bd,170900011e8b334dd2f30682cce2c497aedc9d8d3857b0186a78a442976bbff0cdb7308078b28330b042956e4529de86995ac84c68b1c812,17010001046178b76b5391f196bc10cbe39ee5e790fe66b2ccf3040c4828f0555e46c22374b9d2657db136860b1bdbc1ad72f8a86d05dbe4,17020001d2fdefc94c408ca86c4f59974683398a2da9af8dd4f4057a9b45d97ffdcec04d9dcc0e287b72918034c3c8a4178d541198ca2257,170500016679f40c01c6128cae6ebef83ee3406aff1c3e03acc226eee3da1f088e5489a60a47786d468c888af0d675b6848c7c3f6a78ddf9,17090001e243bac78a71b6fef26a8b5272acb3258c79d3084cef798cd5a0f49151f14c499c9d10eed49a4adeabe27b6514e65a95b64fff7b,17010001da53182c5a551b6aebeb2a5fc0e684dfafa6c6990681ea6a8d331dd08a6acd4f3476b0f5f577d640132689975e265a6e2cf0950c,170200012c5676245f084c514f6db03042220cc1d3ee34a710ed9e8dcdb2d42956553e07741336b3d235a4162289c16597c0b9b3a7208871,17050001cc2d1f95df550538d98592459cafca66cee68e61a7ae164eaeedda56550d0b81fd45ae028997c159896bc139bb5b3dffe4cd9081,170900011f23654561dc9dff8a173812b5918a20d0f697afcb3666d782cface5bcda41baefd747c53a9126cfc6794176e318535bac5056a4,1701000168026803c88b95f4a6eab9a9a55590bd9f0bde6f64a050f44c05756d6eba76f8a44284202b20e41cab9989a4fe4d34e5bd912708,17020001fe16ac06da3c2b73eb19906f56b371087111dfad691c8d217e702194cdc94bbdb05ea1ed9728ba30644a10e69e30addb8470b33c,1705000128a8c1c288f00c02ef68dbe29c271b122b3c08bf44b2577b372437b40718d4c99b9adaa3726cf4edfb67d6860fea79e9adb96232,170900012b3c754989ee96f9bd074c03368748c54b17a3caad76df5fb088a8f234f7b9597656178958cc4dc63954224deb891355688c0ade,17010001c4462380e418f595a28a7a337cdd5c76cabc653d195ce4ff40876717859dc94768ed0e92a7666988b6fc1d474e8583550ba1fb50,17020001a271decaeefa078f552b0bc0b44c173f0c1c9615a4cbff19da918b86af30a64cf9ca58562963db3982b1d37f914c406b5886480b,1705000133e20f362f400c86defea5bfe1eb8485854e03399cffa4a0d471e7c855a3a58dcae759a4cd623943a0e22f1eb94c130edfc835df,17090001a6a563d9ee1b75bdaceb93a60f90504fe61e8846d630b732d3bb6a0fbdebbeecb6da2547bbb4219dd5ac4c71e601d97bfb9597f7,170100011201669e7ac0a1a6b59d6544599f61a66ee7002cda71078540e82e389c23703c94fe32204bc818531dc3b09967566c0766f278ae,170200018221cfcb3bd307f5d1683f2bce0916375cb758e71cf7e4605f3bf1c68ccc0961f38ffa9fd84705f49559b3b33f75c96af837105e,170500015216f57d8e639dc0fb80364070c30bd9274a7b6b75ad08a224c6e2fdb9dda31883f0b91cd9fc839cf182f60386e26024fe2c5e28,170900010aadc0e006a82de391ad6c54abd9c4bad8e39da9c1388c0c703bb6591055e933c926a8f716bc00e2b0fb411e7a94cc95c45f7b31,170100011e96ac7a2985626a69d4654b998fed324e75a4a73da81ff4fce352747f76190a1b74544498f112576a04f7b1126c39bf03553e74,170200018e6577849396a79062c8b58223851481ebb1bc1b39f5d300127db261dd8c4d63c8dde44257c0d5ba9c5e3b632dab987ee59848cf,17050001f4994eaa55c0cc82e699f86cf4b69da8214266cc1e007309fb014df3af6771e9e442e0dca376f08bcdcdfe5275f8f9c63e7c5cb1,170900018c3aa6e4becb586d4db7751353a9f7102d7ad88d1a510847e499ee24d3be3e37cb2d8d8118230fbb4ce309ff61dde6f5714b9ec7,170100012b71542eab437b6e4f399046273069b0b68849a010c0957347c98f5f9c5d631fc755388507a9bd79c6df694229f953e63d742ec3,170200018f67d39e96dbee8f0d65665af3877f70287c628575ddccd98920a83556dc6a6e69f506d3b525c772b71876d44919e19e603f42ea,1705000173b898364c95a7ddf7da19428d61395c37a003440dbfdbaec5ed03ed242acdf7938ad20d494e52e5be33b43e46373723ec6b5458,170900018afa545ddcb9ba0303c7871265036a2de6f6d59298ae09d8b27948a5146d146f36903d2b3ead687bad765d42570e6b32a54c1aa6,17010001b44fd831f62ed4be32a0b31a67c272eea63e71938ea1ed018c8e9bdec6a07d4b766240421aead948ef7c4a1077bf34315fe0b46f,170200019e1c61bb81721d6eacc2127a959bac51441193ee5b09068bcb72e85816c6931204f17ff98c9924fe0fee44a427d8870ca810b0f4,170500019ec8a247aa33dbd6b21bc1d6967de780c8054e545b079e682dd455bcbdddd7fea100c7a26f6a99e0594dbaf1eeae1f77f2f07302,170900011661c1418b8e08d2371890d4f46adcc80cf4abff5ddc3034bd6311efd4a70d495744061c135e2b32554d995db94d4df8fd11b3cd,170100011e1b4093d1c70ebb97ed9348637b2598699172314e872dd0cce8b54e70dd2a64cd660110e72884285ef8da8fb43fcdf5d00dc8b2,1702000179ac15df585679dcab0f7ec4895d29c026baf33be7177db0128c9a242eab659f6c39fe6771e3a6c067380b5b23eafde4cc4b2510,17050001346deb7463ab4e0437c843af1b76c84f421dd5f3fc6fb70f36c5173d834613a5a4422cd45077774b899ed160175877bdd97ecef1,17090001cbb4046241aeb1c46c3911bb61db85fec7abed66b0d57a11f92f722f80e392b505b539422f4ebf18af052b47978cd5dc1f9b98fc,170100011476c94c30a4d98d11d084070f06965b7041292c6df28e5dad7b32b367e53752464edc6bf73d003b4c932cbfc893a29bd6faac27,17020001043560b0689f2bebee7648da878108a9df3565750d1a1ac9f6733e5e3ede5f838df1a0636bd7423358d0932d713a111f98556a5b,17050001410f9fa07f642cf611cb4a5f8cf624849b2722e907a389369045a415be051fac12e248329cd219cebf76b42adab79b51f110bac2,17090001f91eee88e6effb8993ab18907e01f9bca34a6e6e1936d2ba5674740735e82ebc21fa79e1a856b12910bb2311dc406ead4e9fc426,17010001fe9c36e8a3a9d909a3f53a1a143f1467e69b24766e14a3dd1487b08856a40a4e5053c506ad16cd3853fac8e68b1a17f647435507,17020001620a07d26a40b3d3561bec82aa463099a6e3a5ecaf2edb77740f56b53bed769275149ed1f0619ab14f1f22918a013161a166130a,17050001ea69530661105e2cbbd15b5d3649d9a9c49f0426acff5b8f08041fd01c443523595f107fa48734b30f28dff20256acf61069e3f5,17090001c4936c95efe121f96eb21ffa91473c27a7960707cbf43191ddc5066a07663ffc16d3a776d6d0d73efe044cb234c6a6babc083198,1701000128a65db8addb1388132a302c5ad8103e3ee18a0c5b952aac791e8091cad167061f43e3b19292b9186bdf59db5e0d5cda5d1686b6,1702000180814fdbdafbca47440f5f7aeefed82064667ae715fc9d6d7c32c807bcc21872985565d4fd03650dafe1395fe37bddcb3af3e165,17050001da2fe2e41e406b23ca889e2cf18eea425cd52e1dd1735cddbbe0d9589c82c1d9734c6d8558784722d2f974616392da6fb7d918a5,17090001d93610304ce9387ccb8eaa617224f784c34a94ad2cb4c25251aacf9165cb63a62ba0ced20543e5774eca6a4b54587ea59fad04be,17010001e5976c5f8a3676735409562db51184552eaf763851224e64e931df4143e339b1feecac8a24fab041f3ffb4f9d806baba636b7b11,17020001fc098ff89037da78dfa1963c0f26eba616457dffcb2154e9c7a48ca3c7fbcd8052b1a3af5dccca493f0bd16e9218849d922258e1,17050001d5213d77a9609ac176061b6458bf72e7f8941b6902b959151c66f45ef90f4bb67aa91aa3b9d0f99ef155de38a48bb0249306eeac,170900011674b43eea3aa4aa2abd11e3cc289665c817e3a839639031785ad144bdff0c7d97d4263ad56bcbcacc439565699f7bb46de09f53,170100019e54a62411e45e2db632eb702148455c536d438a9bcf83d391dbf4b00ab916d8b579964e7ddaebf3157589dc7a324677c581ab56,1702000148e95c3c42f29749061cd0408c80c3b9560d62fed17fd2fed3f81fcc8a6339d72cfbeb778eea187d634789a8a7d1cb3391b85ef9,170500018da5ff00519952b3ead43b9c91782072ee12a6dde78fb06b9c377bb1390d011c921c4c312fdaed742a996aa4a1c1e5f764afd0c8,17090001336247b2ee2f7f0ad3c17d7b6cb7252e9a54c62d6623524ab8066a48b4133e7854c980920bcb04733ba352c6c3fbeaa9befe7435,17010001ce7b016522db52878e25fb87fef92d6ebe481c2088b41759df45760176fd938448566489f93e124bbca246a9d8b7143562e2c00e,170200013466f40bd80a8291cd3c3dd5b5c522547f9f8bb56fe15f6bd32d12c9831beaf2cffcbdef842c02e4f4363aca66eea3ebe94d0741,1705000118eb397d3ed7f800181bb3ce7e6f9cfdc3600aa1b5b8b8a06e00631744c26d76a79eb19162bc168198a92e41331411eccdea16ae,17090001d301b2c981e34d875091696a203d0a4ca4004f21a5ced6c6fef7fe09c66ae83de9a996a56a067dda66166dda1fc3205ab2c6e418,1701000159a8f359a4ca8bf193a9db3c1f3616b450adef18741119f30621bbf77a4e17541429e280b517f6d3907b120be2cd86890264e7dc,17020001683ea571d6ffa670afd8c42d57ed68e3d54940ba26f8cf6713cae89f853665451551f390d3a9cca8573f9c213d6d496c5d927513,170500012e363346424d943a0b654e513c1d18d42842d17f3f7bbe5a6789a369806e68c6afc07cf9ef00d56eb9d7f1ca526fd14b9d42bfd3,1709000154daffec65281435098b7bd0494e68a924d7a3a20e54d6d806eff019660350964ce0d7b180b548c820e5d9456bb8a672b2c526f9,17010001852830e8fffb3d1afe4b4ae1a8b872596e153cc78bb434449656252cc4ec32498705d75ac1fe3efa00bf000d903838085c6db148,17020001c76532ed38d288512f40e28d5bde36bcf619df99b315f2696b4180e41b5da8e60b27811d28c1f038b859d71d58bf87f831c620ab,170500013562545afbb20e85717de5234bbd93814065be649f2d64c27c49f02ecaf7a6ca8148fff297dd2b33bbb36d3327a9bea9a19449e8,1709000175bafd89212e7a70cb6bc21bea830bd438973e1f4af9fb75812a30270a2d231509eb0e478e2401f4d3cf5d3ea5fd5f605924f35e,170100013a8966c4a76c3bf937120c944ff6acc511424474b73418298286aeefbf688bcaa56ef3341f7ba02918676017e3ec9bc08860ce54,170200012c26d5d45b846af3dd7573b0467c2ae289eecd9edc82bcb694ac8c9e09fd330485fcf030e1b15cc7d07d43e5a5fc7c0427319302,1705000100c953b25f363fa6aeb9d435c8ccee1f273eaaa291cd13d2017e5804316558525f1e8160eca347706cb7d8d3272e9ef4a1aabf32,17090001288eef4e1c1eb5beb574b2d73824ba54ae9cdeab632db792b8bb90d95c79d8a98689dedea9e6b36ec380d6bdfb5ee76cb6634d8c"
	hexArr := strings.Split(str, ",")
	for i := 0; i < 100; i++ {
		bytes, _ := hex.DecodeString(hexArr[i])
		tests[i] = struct {
			name    string
			args    args
			want    string
			wantErr bool
		}{"test" + fmt.Sprintf("%d", i), args{reader: seria.NewByteBufReader(bytes, 0)}, hexArr[i], false}
	}

	for _, tt := range tests {
		t.Run(tt.name, func(t *testing.T) {
			a := &StopNode{}

			if err := a.Parse(tt.args.reader); (err != nil) != tt.wantErr {
				t.Errorf("Parse() error = %v, wantErr %v", err, tt.wantErr)
			}
			bytes, err := a.Serialize()
			if (err != nil) != tt.wantErr {
				t.Errorf("Parse() error = %v, wantErr %v", err, tt.wantErr)
			}
			got := hex.EncodeToString(bytes)
			if got != tt.want {
				t.Errorf("Parse() got = %v, want %v", got, tt.want)
			}
		})
	}
}
