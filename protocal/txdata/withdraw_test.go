// @Title
// @Description
// @Author  Niels  2020/9/25
package txdata

import (
	"encoding/hex"
	"fmt"
	"github.com/niels1286/nerve-go-sdk/utils/seria"
	"strings"
	"testing"
)

func TestWithdraw_Parse(t *testing.T) {

	type args struct {
		reader *seria.ByteBufReader
	}
	tests := [100]struct {
		name    string
		args    args
		want    string
		wantErr bool
	}{}
	str := "17010001d634cc5d69f48839875a45299fb2d53838acb896a7be489f5aafd7566ed1cba45eea96895a09c02872f08d3748e2d3589f63f2e8,17020001853b04228276046f3acfd9ce24af0d272b4307dc80ade4e6da9e48a6a269b03d57b435b18eac50db5656605d1eaadeb8220b7a9b,17050001c0a21e716213d11342f6709f667b6f4faa2ccc38c7e157225bb81d2cef21a2bf9bd3c4652f38f45137266f09ccea055f0e9cb512,1709000136fc02ef4ec07b574278cf7c8adc691f79a5043704da354a92793058d35284ad061ffa8bfc2a7d5b783e5f441ca772a69ee3e6b7,17010001547b0bf9ce0c3f521ff45796d4071542919d174283971851bba4451b85917d13dd62cb3a5e500c5de86bd8c3ee6d632d61f8e9e9,170200016e4a46354c08c64deb929965b8a7ae9e4d60e8709d5c83f51cd335c1429edaecb39a0e9a2e2297aec0c8aab96a62db24c95f7f4c,170500019bb10006184df297b4077b09c0f44dfb2af4dbf5bf508cd490f633ee5924a530007c2ba76701772f4bf8e9269523991887dc3471,17090001327790afe60897340acfdc986d90d2403c78c856704c15355dcefbc881a6d72c10bddf2e42b4d1fa2d4dbaaf75756714d631fe0f,170100015ecd7e353402514d120c1084e1135a065481aa1e4cd48037f37b608db0f331a2c22c3018ef206653dff2627a633b80eb4bf6b8c9,1702000138d5fe5e4d7d534240e7c82cc8550c2ab6db1de50589e8d18d495cebd0a733bedcb0aa8a6f4b1ab1554fd4d4c5e8a8fcaa4e9d68,170500014b507cfe2b26e29a6bc75cb37cef76a16482dd993e533a30eff57175a9a43d539e4b0bd38dd4ad527703f55a075fe04d1f155214,170900013daa998ab16c947c75deb1405975d5c9c6011eeea68edcdeda6f9d78e7e9dd1699d35345ae057c4180c5d25b2a4c1d162385bb56,170100018698e94299d5f91d13dc43d7fee415638933a152b8ca1c717212ad1754c8b54baf86e2472c288625d1621731e352afa9d928dd62,1702000156a73fd5ebc59095d3e28e8b6b6a5a1cc6f2353c0697bf5fd77040443ed103efed27694de7ac61224e9d09502d3a84dfdcee2eb7,170500012cd774d620edd013d249e368cd21657ee67f54184ddbd6dd0576454bb10701f001f5d294362aec520ce867aa698916e0f24f8a80,1709000137aaaaf9a748e0b2ff83017e4e52f99e1d6367f44fca6beb10cff339c378d224c55c5aef074f6f42331077c9841cbecc8f77a255,17010001b9fd174610b8b91072a195ceb6ffd0fb6c1d65ada5d4732212ceabe70b674df4ce44d2d58a8dc4d4adbb1ee7e932a6d629c3ae6d,17020001664efdd444082be9b62bd2c1feb81d91e6f34c8a7ae950b8a1a1518b5d47625c67515f50d26e2ec86f52c3f7df6297f6e7b3dc8d,170500012ddb322b7aad0ff50c3613acbbc5f2ebb15866d1642651be7ba0c18dedce51a1b5cd0873a18d0bf6bbae55645c6b1c1a31873798,17090001549d599847c37c4df54463f98d77b3b79b41f7208baf09c0d712212108576408a68fe34ce60f7350c61bf97ed46f8aed92fd80d3,17010001cb42a7e2a6a088015a85729d8796f473b53d533a806ebd0aafd431b7b1f26ef3e4d60d1d12e8a19f341e79e1eb1faf10b92c6550,1702000156853c9a47d17ebb6f67a16b77a982ff9e4dc9b0c04ce8de30c1727bf8db2e0512fabb4a8f68e3f5828896a77974641835a90eee,17050001975a2270d6c9db10bbcc9e0aa846e4217ed6b67a998b7c4b0021e4e18565326451064404e25d18734076336e1e17d15a88b84c87,17090001847eafd33b5d6c7d0aced029ede3c181ec9a7f0fe632f269a38da3ca611d3ddf09cbfa032a42735f7c4a61405195964c62267e91,170100018990ba11727019418f269cc0365962ba877baedcff056671a6a6a1484031fadc858b86500a8c9c86c4f565b9ef72c2d33ba4ffcb,1702000199eae1bb121e88c705d4255039566abc20744102be3b3adce0f62c0753f23616c3f66b1426c431b451c901f7396f88257aaf9e19,170500015dae96381b15ce1d388700c47716e24c75952ac350df438721d2a2b84ee8775bc36640828f2eb927eb82cd63e1a4b6405f9cbdae,1709000100daf56356d8f3e4952bfaab78343aeaa4ec06b80a0f04a3955f13755ae63962da41afe793f61953998b63a6a68741592bbc750d,170100016dec8ef6b6211632cfd9c767bcc6d4faee65b0079fd7b9b8a1040aca40257ce72ed3ca958a398f1c4007984a9ad846687463a351,170200017d4177f4b696d7f458527ad1305f2e97fdc34c81873d3b8cd2e877d6ce7315aa50db070a6a621a5a4818789446cb5194813d02ae,170500014c073af9130ca9d52d0f8edc4597a220a4126dacf2330e023a44ba395232f4883c0bef4058779e3adc2665e9a9f9e05131ce44ec,17090001ed3d55e18150e5b83c807342fa7d408b0d4197b3e592b9a5f37609fd65f9e48e86e5eb43bdb2493207ae85e5415edf83090f0636,17010001b69c14240928e693f7ae78de59a4bc1e542a017dc03d5603a4991b37d82bc4d9d3c3d9e10cab8ff3a4ca84b0b9483bd802f79bf8,17020001b9f37422b018282a902992d71f83f82887cb45f5e542a53b6217d34817c3473e193293fdcd1e2340e45fa9a4bac4f97d19f26ae3,170500016d9185853046dd3723a3aa427132a3304d55b731e5e509c00ed2205ac2ba0572c9f49ea6617c6914d1527c1b4ae85660412616af,170900018a21e7647896f38138eb659f270ca65c1b3bbd1875b0bbc293e685dc5053e25a3ad1640c5be38587d79a4df393968a14127aedfe,17010001c7f480701bf6d4a8d686a2162e4363ebef9014c252130fd4f293f271fb9122bd5318e1f62cebf8b932bc6051e728e3ab9018455e,17020001f6d4038eb553e845fc23cd4afaafc72109d261f84e287798fe4ffb8ef83814e909f65d4eb0b369506e8f9189ee5df064dfd9fbe2,17050001414dec747eb686a8702402a6e8953d10312749e0884d62f2bb0b5b96b096a722e7164260e26238fe365e0596710f01dd8d95d5fc,170900014f59a5188270f82b278966bd8eaaa7d67bc871c897a2dca1ef0496cc9679c1ac6553cd8ce54dfa191f37171d544515d09e2361f2,17010001dc4e9b0783bdf41173cc979cfb4b6bd052302ddc77de5fc14dd743467a91be6ed2d5e114e9c16ece4af5dca9038d4d00516265ef,170200017bca9b29d1316ff399e1316b56bcdf23f19bfcd2a360d9a3ada77fa65d6b91b9c3a899cb942351e496a53afd87a5c984e6e755e4,1705000172db30fe27cee547982622e834f2802ceaf3670b1335a73ec2d2c4c096cb924973104bdfa4f14ce064fcafef12e5e74f589783cc,1709000156372a8920387efa7ac4fe007207190f2737274a227893b4f099f881d2f2770f7b7d557e5876dd84628451675ab3d6cf9a4c00c6,170100019f3231bd471661dd6677530608287d46c5a8232fffebd13048942abb2b58516fb1cc04c19169fca5d1f56ed1a58ebc787d70ab02,17020001a73f0537940b388c25e74c6bb3bd3f050a615eaa19954bdec8ee02ca669264949169f56f074c50fb065756cea11630672cb007b3,17050001adc34262d7d37106d6f7755ba8aeec556749e8af48d87c49499475d7aac7fc0f8619fc0de4dc64d6eb30b2999233eb10c8c3059e,17090001e4548aadde361a935e9dca16b8e06caf43bcf1a11559a46c046028a2bcdecded2ff4c804d3b79d5a151ab597223bfcc0dd13d8b5,17010001183e599a2ea18e4bab30e50f254dd46e75c79a7d0bedf1d7479425aef46f4ff3b4f9564bc386fc0e83770e0651cea9e8609139fa,17020001e160ad2cf0c65117e4e3bf7c6c85f70adba33d895b7e4babec1789cbf14972e92f3cb0d698672bb83e9dec3763b53e738054678a,17050001d94851c005e0e410cda30ded70ed8b81757a356a047312886b5cab9d95df1a72fe7183cfe4f4850ec2497cee2e61ad474ea0e5ec,17090001e29d155007285f10da11fa44790451a870b596a3e834d6874b59a04228471882b86af13e81069dbfcd0f0a163cf7b39871eb99a8,1701000132101fb503cef7e61c25a9e8357c7d8749df9a90a37edabea69cb20a2cc768149058d9054d5c2407086ea51f45702cb5342fe487,1702000110c0891638bbfbae94fb6291d42710d4358bb5947d0038b999a8cf889cc642a896348cceee9f0a185fbda8f614c356af66b9baf6,170500013bea04d7eefa28f6d2cc0da418b14418f18bb6b6cbb7631953e2db2b03513059e087e7c4a9b150595619a8464cd02ba50b399eb0,170900015181d1c806401e463c9960d8b5ae2f5bedb96006a9e5958225c1921739f828fc3063a328d71cd04df6c4f5edff347d179b89bb8f,1701000118992ce755a6ba24c4beb6d583386736afc61df2e44d228187994b48542b85fbf964c7f9ced63759747782f6671e82ccf5a00e48,17020001ba768aa8b489d4d26e3b2a9cdfb840e6b2931b82f4fbff259407524197bbf1f50b7ac4d0655a377eb8c0c475d5a77fcd64bc27a6,1705000131ae6b5e97e3b58b0a10e76c066d171495eab7acaa2dd8b90298506bba4162ae505beb9332ab47b1f17cdc9f3362fe4c3211bb50,170900013df8049c513bda606cb7803d1fbac7d8f4c11bf8ac2e89d3bfc7cd7b05b2e3361890523cf8cd294431718dbbeb5d424ff8b31534,170100011c2f240118bd07d39396951f20f77aaa74db40d7b2e8bb9efde6fabe973dab34bef866282e5e2e61b8621b3a8d7bc71ebd951895,17020001f36abc54a57ef623db71a30bc88fdb0430d31a697acdb6f29b8e12433ccb10627bb3f2a67375df31b803263a729b937efac7a78d,170500014d8d3523de5f786e21f22c28897b6c681a3c37cc2b9048e9278fe15d5f8d21c27f8228715c1bf9bdca3a156236d5bd53676a90a7,170900016aaeaaae68d6d6cb9fd5a27f5f52e82817f588cdcd3fa6cb5bdce291a9264a5dd2c42f77bd6ad38cc994b07cc1ffcb44026c34d9,170100013e534d410a6b0c390fddbcc7fc6b204f167a939947ea129b9f506e67a7f2c0c3c994d2e7b2deb853f157fdd4141dbc0ba4dd8204,170200016e48f2c88a1094b07e59ab82f834aa7b09c22e2ab5e216f0f9409301bb61df7429b1714b3e12e8a7f3fde1a6f422a4e58b83f77b,170500019bc5c70912471c5ab0da186790e381bb232d2a0c5d6aee2d46ffcf1e61d3abe8bdd4e93add62bdd00c5b63678c57695af01bf0f5,1709000169c5ccb42d721f6e72d709452894f075b91a018115bcc5694eb1bdb72a4907af36ce0d69851fc5c9791da2890797d62521713593,17010001304d14155894922480f9e1a98c269ce4ef3e0d5da09ef23d1f3178654c7ae0c5f71627a7dd721d06b96e53a7fe47b01ae7ed46b0,170200010cde84d2e5481acd8c07715fd746a613575d5f20c6dc207b6f27cfbca4ad716c4aa3d2cafbb459fe127f9929cae3f509d7ed6273,17050001126d56011b59806ec176f3393e8b93b104a7b681d92934d56d65ff4c83f322de56fa0777b18a764a65e8ca254906963984ba34a7,17090001313e91a3145216799eff5cae0dd4f1e3343146d4c7d15a73508db77e85a2bf59da7d36a05a9821898f275b162c5d375fb9b06b02,17010001e1cae602b330f4d04821c168129c46c9c0926ccf8e81144b7b921858436b8b016bcec95a35efdc81e601e5dbb86664846d223a0a,170200011f63eccb62f25fa64453de35f87362e452db9b420ae19e5702f92fed164fb7820d3e3c6c0b75088879f52da67242316dd539439f,17050001c196375ea8a16ac3cfca1ff674696934be45184c8da60d5fde45a57f82df784d4507e1622f507b8b7f3501a584785ad7f6d347c1,1709000174cc4851a54b61b664ff1956998080508c81ffc63c18f9bf005df1056adc08ceac2d972c52e9f69a1a1b25ce81821f46ac0a2325,1701000199a74fbf5abb5cecd8106e66447378ace141694638f8ee5e59b3925e2bd5ee206a2f043e1100285a97a6a629d93d33186ee8d866,17020001162aedb7b7adc02cde2c437b114f32ae016e0c473efbd9fd684e1f60b6c350d4247380abffbf3b69e2d33ee522afcbd4f7409158,1705000168768e91799f46493180bb0b3dc5de9db2253c33d98262eb02df4a553b099d1f88e3637b22a7344cdecabfe6f7c909c7120dc076,170900017ebdf0f6d1f82ce49dd9f867f35134d96f58260fb2f6b90b7036809c7ebbe734db8f0a286e36c78a9fdff73fcba096893bb8fed6,170100017284dc3e283027b9b90ce60d158bacc02eba6b32b235427347171badabbc31913b99b55f55dca81a853fa3553e13b1f4d6518713,170200014de5cf822d7dcbaed217f886d82d14a0d511e9b0e962541aea1c4896ec3850e2ef5f618478c8e669dc2d1809c0617e4d140ee976,170500010c80170214c2b29d455d210a4e18be6856180242a6bc2c502398c0fc2650ba767e8250f114da92b4d216c68a58734ea6b940d8d0,17090001ab1b3f5f27f62c2626eff62d3e2616bdc32e6b9f9e9d588b111087c2bb6a6e5027973a140be39078adb34aaab1d928f1d83bb58f,170100010790229186f9621354974be402e0bfcc459f20d1a0d629bc4f4430d76112ee68077dc3f000170fbfa63d0fca1a7446166ae645cd,17020001272ca90aad63ae79b89a857320a6cdf00623bd257948819175da4add2f07334c2c9e41654c736a26791974554789604401791166,17050001aeddcd3fbe43004883717ca289d3d4117aa6683ca3ca25b8e26a13605eac58d49b911a2f0064a4066f29e7a1a8b13d1637d4162d,170900019723c7e5da811ea1087869d7c92de05b50e34f93b5fcd69b11d1ecd1c4241d1952ac58f07a8d318f0cc579e70c7d763bf43b31a0,17010001c90c6696229997701a13eff1c6b95135ce5008d8f38930f724451d8043c70dcab353f30d1f2106f2debb60a27dde6430eceb75c0,170200017eb4638d4dbaf85e3fa4ddd3ff59546546b3c65b96bbfbd848497edd06ad90024c23389288e8cc06fee0a08387f483db3887ce83,170500016c8a9f59a7edbce41092a6256bfbe9edd1a79f066533d1798b5b70b56a250107997ab2f017423325a32b285449b9b0100f8df964,17090001090f208c0b16c53a126cb51b276cf1a53bfdd43bf67b3ca38ac80150c089811b089917c0d1c26746af6bbd4dfe328d771c971e59,170100013190ecb4e89016251a802ebd80abeb92b90aac3f962713c257241125032ba84bb960d7970f438ceb3a0e846b46f53de5ce7c4b90,17020001532f47c0e44e735a9c0d91db2e234fec3584f4a518cccf0d0ca31d29f2c2dd7ca9c53b24748553cf244f2e18fa88006d50950a64,17050001f7a2a664134fd55019614d3157f5d0465074e4ea3513c7f4704cf23d88daa5e0044ac8348f9b918ebf8837a3cce1d5ce736ea299,170900018e197dd2e1c7da03d577103b5f3d7494745975cc06a343af78b7bc7130d3ff7a17d765170eab7cc607d4c6df35a476275a3c12ed,17010001b5783a47ec4feb6631c493ea72aa0eb86233bbce6b2109852a586deb455c76dec95922361c1b0e505233b15b2c341d9b7b3a0b17,17020001d5926065627a9935fd044b5c1866486722d0a718dfa18c735f48af43ef3cc4196df964ac7735e90e517c51c5ba8ee4c46f4be0a3,17050001ac11f011ea6570031c7fb7f5cb57c0205d7060a1369799e612ec12f4b392f463101687a4e521ff8017d8c3fa8df292576fc8ccd4,170900010ff0fcde01833b3ad112b178242396dbba53c56185344bdf1c186676030ac6705ecc0132f32eb6c54f6f3a39ce47ac968c44f52f"
	hexArr := strings.Split(str, ",")
	for i := 0; i < 100; i++ {
		bytes, _ := hex.DecodeString(hexArr[i])
		tests[i] = struct {
			name    string
			args    args
			want    string
			wantErr bool
		}{"test" + fmt.Sprintf("%d", i), args{reader: seria.NewByteBufReader(bytes, 0)}, hexArr[i], false}
	}

	for _, tt := range tests {
		t.Run(tt.name, func(t *testing.T) {
			a := &Withdraw{}

			if err := a.Parse(tt.args.reader); (err != nil) != tt.wantErr {
				t.Errorf("Parse() error = %v, wantErr %v", err, tt.wantErr)
			}
			bytes, err := a.Serialize()
			if (err != nil) != tt.wantErr {
				t.Errorf("Parse() error = %v, wantErr %v", err, tt.wantErr)
			}
			got := hex.EncodeToString(bytes)
			if got != tt.want {
				t.Errorf("Parse() got = %v, want %v", got, tt.want)
			}
		})
	}
}
